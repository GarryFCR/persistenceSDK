syntax ="proto3";

package persistence.modules.splits.transactions.unwrap.v1beta1;

import "third_party/proto/gogoproto/gogo.proto";
import "proto/persistence/modules/splits/transactions/unwrap/v1beta1/request.proto";
import "proto/persistence/modules/splits/transactions/unwrap/v1beta1/response.proto";


option go_package = "modules/splits/internal/transactions/unwrap";

service Msg {
  rpc splitsUnwrap(transactionRequest) returns (transactionResponse);
}

message message {
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.equal)            = false;

  string from =1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false] ;
  string fromID =2 [(gogoproto.customtype) = "github.com/persistenceOne/persistenceSDK/schema/types.ID", (gogoproto.nullable) = false] ;
  string ownableID =3 [(gogoproto.customtype) = "github.com/persistenceOne/persistenceSDK/schema/types.ID", (gogoproto.nullable) = false];
  string value =4 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];

}