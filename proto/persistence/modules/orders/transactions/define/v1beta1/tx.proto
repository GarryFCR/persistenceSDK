syntax ="proto3";

package persistence.modules.orders.transactions.define.v1beta1;

import "third_party/proto/gogoproto/gogo.proto";
import "proto/persistence/modules/orders/transactions/define/v1beta1/request.proto";
import "proto/persistence/modules/orders/transactions/define/v1beta1/response.proto";

option go_package = "modules/orders/internal/transactions/define";

service Msg {
  rpc ordersDefine(transactionRequest) returns (transactionResponse) {};
}

message message {
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.equal) = false;

  string from = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.nullable) = false] ;
  string fromID = 2 [(gogoproto.customtype) = "github.com/persistenceOne/persistenceSDK/schema/types.ID", (gogoproto.nullable) = false] ;
  string immutableMetaProperties = 3 [(gogoproto.customtype) = "github.com/persistenceOne/persistenceSDK/schema/types.MetaProperties", (gogoproto.nullable) = false];
  string immutableProperties = 4 [(gogoproto.customtype) = "github.com/persistenceOne/persistenceSDK/schema/types.Properties", (gogoproto.nullable) = false];
  string mutableMetaProperties = 5 [(gogoproto.customtype) = "github.com/persistenceOne/persistenceSDK/schema/types.MetaProperties", (gogoproto.nullable) = false];
  string mutableProperties = 6 [(gogoproto.customtype) = "github.com/persistenceOne/persistenceSDK/schema/types.Properties", (gogoproto.nullable) = false];
}
