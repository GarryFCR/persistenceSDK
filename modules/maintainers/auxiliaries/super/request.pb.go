// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/persistence/modules/maintainers/auxiliaries/super/v1beta1/request.proto

package super

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_persistenceOne_persistenceSDK_schema_types "github.com/persistenceOne/persistenceSDK/schema/types"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type auxiliaryRequest struct {
	ClassificationID  github_com_persistenceOne_persistenceSDK_schema_types.ID         `protobuf:"bytes,1,opt,name=classificationID,proto3,customtype=github.com/persistenceOne/persistenceSDK/schema/types.ID" json:"classificationID" valid:"required~required field classificationID missing"`
	IdentityID        github_com_persistenceOne_persistenceSDK_schema_types.ID         `protobuf:"bytes,2,opt,name=identityID,proto3,customtype=github.com/persistenceOne/persistenceSDK/schema/types.ID" json:"identityID" valid:"required~required field identityID missing"`
	MutableProperties github_com_persistenceOne_persistenceSDK_schema_types.Properties `protobuf:"bytes,3,opt,name=mutableProperties,proto3,customtype=github.com/persistenceOne/persistenceSDK/schema/types.Properties" json:"mutableProperties" valid:"required~required field mutableProperties missing"`
}

func (m *auxiliaryRequest) Reset()         { *m = auxiliaryRequest{} }
func (m *auxiliaryRequest) String() string { return proto.CompactTextString(m) }
func (*auxiliaryRequest) ProtoMessage()    {}
func (*auxiliaryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_752df454cc52d308, []int{0}
}
func (m *auxiliaryRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *auxiliaryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuxiliaryRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *auxiliaryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuxiliaryRequest.Merge(m, src)
}
func (m *auxiliaryRequest) XXX_Size() int {
	return m.Size()
}
func (m *auxiliaryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuxiliaryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuxiliaryRequest proto.InternalMessageInfo

func init() {
	proto.RegisterType((*auxiliaryRequest)(nil), "persistence.modules.maintainers.auxiliaries.super.v1beta1.auxiliaryRequest")
}

func init() {
	proto.RegisterFile("proto/persistence/modules/maintainers/auxiliaries/super/v1beta1/request.proto", fileDescriptor_752df454cc52d308)
}

var fileDescriptor_752df454cc52d308 = []byte{
	// 331 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0xd2, 0xb1, 0x4a, 0xf3, 0x50,
	0x14, 0xc0, 0xf1, 0xa4, 0x1f, 0x7c, 0x7c, 0x5f, 0xa6, 0x9a, 0xa9, 0x38, 0x24, 0x22, 0x28, 0x4e,
	0xf7, 0x52, 0x5c, 0x8a, 0x8b, 0xa5, 0x64, 0xb0, 0x28, 0x28, 0x75, 0x73, 0xd1, 0x9b, 0xf4, 0xd8,
	0x1e, 0x48, 0x72, 0xe3, 0x3d, 0x27, 0xc5, 0xbc, 0x81, 0xa3, 0x8f, 0xd0, 0xc7, 0xe9, 0xd8, 0x51,
	0x1c, 0x8a, 0xb4, 0x0e, 0x3e, 0x86, 0x90, 0x54, 0x1a, 0xe8, 0x20, 0x88, 0xdb, 0xbd, 0xcb, 0xef,
	0x7f, 0x2f, 0xe7, 0x38, 0x17, 0x99, 0xd1, 0xac, 0x65, 0x06, 0x86, 0x90, 0x18, 0xd2, 0x08, 0xa4,
	0x22, 0x02, 0x26, 0x99, 0x28, 0x4c, 0x59, 0x61, 0x0a, 0x86, 0xa4, 0xca, 0x1f, 0x31, 0x46, 0x65,
	0x10, 0x48, 0x52, 0x9e, 0x81, 0x91, 0x93, 0x76, 0x08, 0xac, 0xda, 0xd2, 0xc0, 0x43, 0x0e, 0xc4,
	0xa2, 0x64, 0xdc, 0x4e, 0xcd, 0x11, 0x95, 0x23, 0x6a, 0x8e, 0xa8, 0x39, 0xa2, 0x74, 0xc4, 0xda,
	0xd9, 0x3d, 0xe4, 0x31, 0x9a, 0xe1, 0x6d, 0xa6, 0x0c, 0x17, 0xb2, 0x7a, 0xd3, 0x48, 0x8f, 0xf4,
	0xe6, 0x54, 0x15, 0xf6, 0xdf, 0x1b, 0x4e, 0xf3, 0x4b, 0x29, 0x06, 0x55, 0xdc, 0x8d, 0x9d, 0x66,
	0x14, 0x2b, 0x22, 0xbc, 0xc7, 0x48, 0x31, 0xea, 0xb4, 0x1f, 0xb4, 0xec, 0x3d, 0xfb, 0xe8, 0x7f,
	0xaf, 0x3b, 0x5b, 0xf8, 0xd6, 0xeb, 0xc2, 0xef, 0x8c, 0x90, 0xc7, 0x79, 0x28, 0x22, 0x9d, 0xd4,
	0xff, 0x7a, 0x99, 0x42, 0xfd, 0x7a, 0x1d, 0x9c, 0x4b, 0x8a, 0xc6, 0x90, 0x28, 0xc9, 0x45, 0x06,
	0x24, 0xfa, 0xc1, 0x60, 0x4b, 0x76, 0xef, 0x1c, 0x07, 0x87, 0x90, 0x32, 0x72, 0xd1, 0x0f, 0x5a,
	0x8d, 0x5f, 0xea, 0xd4, 0x4c, 0x77, 0xe2, 0xec, 0x24, 0x39, 0xab, 0x30, 0x86, 0x2b, 0xa3, 0x33,
	0x30, 0x8c, 0x40, 0xad, 0x3f, 0x65, 0xe8, 0x6c, 0x1d, 0xea, 0xfe, 0x2c, 0xb4, 0xf1, 0x06, 0xdb,
	0x89, 0x93, 0x7f, 0x4f, 0x53, 0xdf, 0xfa, 0x98, 0xfa, 0x56, 0xef, 0x74, 0xb6, 0xf4, 0xec, 0xf9,
	0xd2, 0xb3, 0xdf, 0x96, 0x9e, 0xfd, 0xbc, 0xf2, 0xac, 0xf9, 0xca, 0xb3, 0x5e, 0x56, 0x9e, 0x75,
	0x73, 0x90, 0xe8, 0x61, 0x1e, 0xc3, 0x37, 0xfb, 0x11, 0xfe, 0x2d, 0xc7, 0x75, 0xfc, 0x19, 0x00,
	0x00, 0xff, 0xff, 0x04, 0x84, 0x43, 0x45, 0x60, 0x02, 0x00, 0x00,
}

func (m *auxiliaryRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *auxiliaryRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *auxiliaryRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MutableProperties.Size() > 0 {
		i -= m.MutableProperties.Size()
		if _, err := m.MutableProperties.MarshalTo(dAtA[i:]); err != nil {
			return 0, nil
		}
		i = encodeVarintRequest(dAtA, i, uint64(m.MutableProperties.Size()))
		i--
		dAtA[i] = 0x1a
	}
	if m.IdentityID.Size() > 0 {
		i -= m.IdentityID.Size()
		if _, err := m.IdentityID.MarshalTo(dAtA[i:]); err != nil {
			return 0, nil
		}
		i = encodeVarintRequest(dAtA, i, uint64(m.IdentityID.Size()))
		i--
		dAtA[i] = 0x12
	}
	if m.ClassificationID.Size() > 0 {
		i -= m.ClassificationID.Size()
		if _, err := m.ClassificationID.MarshalTo(dAtA[i:]); err != nil {
			return 0, nil
		}
		i = encodeVarintRequest(dAtA, i, uint64(m.ClassificationID.Size()))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintRequest(dAtA []byte, offset int, v uint64) int {
	offset -= sovRequest(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *auxiliaryRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.ClassificationID.Size()
	if l > 0 {
		n += 1 + l + sovRequest(uint64(l))
	}
	l = m.IdentityID.Size()
	if l > 0 {
		n += 1 + l + sovRequest(uint64(l))
	}
	l = m.MutableProperties.Size()
	if l > 0 {
		n += 1 + l + sovRequest(uint64(l))
	}
	return n
}

func sovRequest(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRequest(x uint64) (n int) {
	return sovRequest(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *auxiliaryRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequest
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: auxiliaryRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: auxiliaryRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassificationID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ClassificationID.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdentityID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.IdentityID.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MutableProperties", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.MutableProperties.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequest(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRequest
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRequest(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRequest
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRequest
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRequest
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRequest
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRequest        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRequest          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRequest = fmt.Errorf("proto: unexpected end of group")
)
