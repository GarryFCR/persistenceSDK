// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/persistence/modules/maintainers/key/v1beta1/maintainerID.proto

package key

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_persistenceOne_persistenceSDK_schema_types "github.com/persistenceOne/persistenceSDK/schema/types"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type maintainerID struct {
	ClassificationID github_com_persistenceOne_persistenceSDK_schema_types.ID `protobuf:"bytes,1,opt,name=classificationID,proto3,customtype=github.com/persistenceOne/persistenceSDK/schema/types.ID" json:"classificationID" valid:"required~required field classificationID missing"`
	IdentityID       github_com_persistenceOne_persistenceSDK_schema_types.ID `protobuf:"bytes,2,opt,name=identityID,proto3,customtype=github.com/persistenceOne/persistenceSDK/schema/types.ID" json:"identityID" valid:"required~required field identityID missing"`
}

func (m *maintainerID) Reset()      { *m = maintainerID{} }
func (*maintainerID) ProtoMessage() {}
func (*maintainerID) Descriptor() ([]byte, []int) {
	return fileDescriptor_614e9e69b7e270b2, []int{0}
}
func (m *maintainerID) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *maintainerID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MaintainerID.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *maintainerID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaintainerID.Merge(m, src)
}
func (m *maintainerID) XXX_Size() int {
	return m.Size()
}
func (m *maintainerID) XXX_DiscardUnknown() {
	xxx_messageInfo_MaintainerID.DiscardUnknown(m)
}

var xxx_messageInfo_MaintainerID proto.InternalMessageInfo

func init() {
	proto.RegisterType((*maintainerID)(nil), "persistence.modules.maintainers.internal.key.v1beta1.maintainerID")
}

func init() {
	proto.RegisterFile("proto/persistence/modules/maintainers/key/v1beta1/maintainerID.proto", fileDescriptor_614e9e69b7e270b2)
}

var fileDescriptor_614e9e69b7e270b2 = []byte{
	// 289 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x72, 0x29, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0x48, 0x2d, 0x2a, 0xce, 0x2c, 0x2e, 0x49, 0xcd, 0x4b, 0x4e, 0xd5, 0xcf, 0xcd,
	0x4f, 0x29, 0xcd, 0x49, 0x2d, 0xd6, 0xcf, 0x4d, 0xcc, 0xcc, 0x2b, 0x49, 0xcc, 0xcc, 0x4b, 0x2d,
	0x2a, 0xd6, 0xcf, 0x4e, 0xad, 0xd4, 0x2f, 0x33, 0x4c, 0x4a, 0x2d, 0x49, 0x34, 0x44, 0x12, 0xf7,
	0x74, 0xd1, 0x03, 0x6b, 0x17, 0x32, 0x41, 0xd2, 0xaf, 0x07, 0xd5, 0xaf, 0x87, 0xa4, 0x5f, 0x2f,
	0x33, 0xaf, 0x24, 0xb5, 0x28, 0x2f, 0x31, 0x47, 0x2f, 0x3b, 0xb5, 0x52, 0x0f, 0x6a, 0x90, 0x94,
	0x5a, 0x49, 0x46, 0x66, 0x51, 0x4a, 0x7c, 0x41, 0x62, 0x51, 0x49, 0xa5, 0x3e, 0xc4, 0x1d, 0xe9,
	0xf9, 0xe9, 0xf9, 0x08, 0x16, 0xc4, 0x74, 0xa5, 0x17, 0x8c, 0x5c, 0x3c, 0xc8, 0x96, 0x0a, 0xe5,
	0x70, 0x09, 0x24, 0xe7, 0x24, 0x16, 0x17, 0x67, 0xa6, 0x65, 0x26, 0x27, 0x96, 0x64, 0xe6, 0xe7,
	0x79, 0xba, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x3a, 0x39, 0x9c, 0xb8, 0x27, 0xcf, 0x70, 0xeb,
	0x9e, 0xbc, 0x45, 0x7a, 0x66, 0x49, 0x46, 0x69, 0x92, 0x5e, 0x72, 0x7e, 0x2e, 0xb2, 0xdf, 0xfc,
	0xf3, 0x52, 0x91, 0xb9, 0xc1, 0x2e, 0xde, 0xfa, 0xc5, 0xc9, 0x19, 0xa9, 0xb9, 0x89, 0xfa, 0x25,
	0x95, 0x05, 0xa9, 0xc5, 0x7a, 0x9e, 0x2e, 0x41, 0x18, 0x26, 0x0b, 0x25, 0x70, 0x71, 0x65, 0xa6,
	0xa4, 0xe6, 0x95, 0x64, 0x96, 0x54, 0x7a, 0xba, 0x48, 0x30, 0x51, 0xc9, 0x1e, 0x24, 0x33, 0xad,
	0x38, 0x3a, 0x16, 0xc8, 0x33, 0xbc, 0x58, 0x20, 0xcf, 0xe0, 0x64, 0x75, 0xe2, 0x91, 0x1c, 0xe3,
	0x85, 0x47, 0x72, 0x8c, 0x0f, 0x1e, 0xc9, 0x31, 0x4e, 0x78, 0x2c, 0xc7, 0x70, 0xe1, 0xb1, 0x1c,
	0xc3, 0x8d, 0xc7, 0x72, 0x0c, 0x51, 0x0a, 0xd8, 0xa2, 0x05, 0x16, 0xac, 0xa0, 0xf8, 0x49, 0x62,
	0x03, 0x87, 0x96, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x05, 0xb9, 0x08, 0xdd, 0xd3, 0x01, 0x00,
	0x00,
}

func (m *maintainerID) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m maintainerID) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *maintainerID) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.IdentityID.Size() > 0 {
		i -= m.IdentityID.Size()
		if _, err := m.IdentityID.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMaintainerID(dAtA, i, uint64(m.IdentityID.Size()))
		i--
		dAtA[i] = 0x12
	}
	if m.ClassificationID.Size() > 0 {
		i -= m.ClassificationID.Size()
		if _, err := m.ClassificationID.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMaintainerID(dAtA, i, uint64(m.ClassificationID.Size()))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintMaintainerID(dAtA []byte, offset int, v uint64) int {
	offset -= sovMaintainerID(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m maintainerID) Size() (n int) {
	var l int
	_ = l
	l = m.ClassificationID.Size()
	if l > 0 {
		n += 1 + l + sovMaintainerID(uint64(l))
	}
	l = m.IdentityID.Size()
	if l > 0 {
		n += 1 + l + sovMaintainerID(uint64(l))
	}
	return n
}

func sovMaintainerID(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMaintainerID(x uint64) (n int) {
	return sovMaintainerID(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m maintainerID) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMaintainerID
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: maintainerID: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: maintainerID: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassificationID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMaintainerID
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMaintainerID
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMaintainerID
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ClassificationID.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdentityID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMaintainerID
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMaintainerID
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMaintainerID
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.IdentityID.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMaintainerID(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMaintainerID
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMaintainerID(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMaintainerID
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMaintainerID
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMaintainerID
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMaintainerID
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMaintainerID
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMaintainerID
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMaintainerID        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMaintainerID          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMaintainerID = fmt.Errorf("proto: unexpected end of group")
)
